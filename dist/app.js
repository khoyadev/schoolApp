/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ (() => {

eval("\n//Exemple de démarrage JavaScript pour désactiver les soumissions de formulaires s'il y a des champs non valides\n(function () {\n  'use strict'\n\n  // Récupérer tous les formulaires auxquels nous voulons appliquer des styles de validation Bootstrap personnalisés\n \n  var forms = document.querySelectorAll('.needs-validation')\n\n  // Boucle sur eux et empêche la soumission\n  Array.prototype.slice.call(forms)\n    .forEach(function (form) {\n      form.addEventListener('submit', function (event) {\n        if (!form.checkValidity()) {\n          event.preventDefault()\n          event.stopPropagation()\n        }\n\n        //form.classList.add('was-validated')\n      }, false)\n    })\n})()\n\nlet tableau = []\nif (localStorage.getItem('apprenants') !== \"undefined\") {\n  console.log();\n  tableau = JSON.parse(localStorage.getItem('apprenants'))\n}\n//console.log(tableau);\n\nconst inputNom = document.getElementById(\"validationCustom01\")\nconst inputPrenom = document.getElementById(\"validationCustom02\")\nconst inputNiveau = document.getElementById(\"validationCustom04\")\nconst inputBiographie = document.getElementById(\"validationCustom03\")\nconst btnAjouter = document.getElementById(\"btnAjouter\")\nconst btnModifier = document.querySelector(\".btnModifier\")\n\nconst divContainerListApp = document.getElementById(\"listeApp\")\n\nconst creationApprenant = (nouvelleApprenant) => {\n  const idNom = nouvelleApprenant.Nom\n  const idPrenom = nouvelleApprenant.Prenom\n  const idBio = nouvelleApprenant.Bio\n  const idcardNiveau = nouvelleApprenant.Niveau\n  let idCard = \"numerocard-\" + tableau.indexOf(nouvelleApprenant)\n  \n  let idButtonModifier = tableau.indexOf(nouvelleApprenant);\n  // let id = tableau.find(element =>{\n  //   if (tableau.indexOf(element) === idButtonModifier) {\n  //     console.log(element);\n  //   }\n  //   return id\n  // })\n  let idButtonSupprimer = tableau.indexOf(nouvelleApprenant);\n  //On ajoute les cartes nouvelles\n  divContainerListApp.insertAdjacentHTML(\n    \"beforeend\",\n    `\n <div class=\"card mb-3\" id=${idCard}>\n <div class=\" d-flex justify-content-end\">\n <i class=\"bi bi-pencil-fill text-warning card-link btn editer\" id=\"modifier-${idButtonModifier}\" style=\"font-size:2rem\">\n\n </i>\n <i class=\"bi bi-x-circle card-link btn supprimer\" id=\"${idButtonSupprimer}\"\n     style=\"font-size:2rem;color:#ce0033;\"></i>\n</div>\n  <div class=\"card-body\">\n    <h5 class=\"card-title\" id=\"bb\">${idPrenom} ${idNom} </h5>\n     <p class=\"card-text\" id=\"\">${idBio}</p>\n     <p class=\"card-text text-end\" id=\"\"><small class=\"text-muted\">${idcardNiveau}</small></p>\n   </div>\n</div> \n    `\n  );\n    let nomprenom = document.getElementById(\"bb\")\n    //console.log(nomprenom.value);\n  // let id =idCard.split('-')\n  // console.log(id[1]);\n  let modification = document.querySelector(\"i#modifier-\" + idButtonModifier)\n  modification.addEventListener(\"click\", (event) => {\n\n      inputNom.value = idNom\n      inputPrenom.value = idPrenom\n      inputBiographie.value = idBio\n      inputNiveau.value = idcardNiveau\n      btnAjouter.classList.add('d-none')\n      btnModifier.classList.remove('d-none')\n      \n      btnModifier.addEventListener(\"click\",(event)=>{\n       // console.log(\"coucou\");\n        mettreAJourLegumes(idCard)\n        \n       \n       })\n      \n    })\n    //btnModifier.setAttribute(\"id\",idButtonModifier)\n\n\n}\n\nfunction mettreAJourLegumes(nouvelle) {\n  tableau.forEach(element => {\n    if (tableau.indexOf(element) === nouvelle) {\n      \n       nouvelle.Nom = inputNom.value\n       nouvelle.Prenom = inputPrenom.value\n      nouvelle.Bio = inputBiographie.value\n       nouvelle.Niveau = inputNiveau.value\n\n  }\n  });\n \n}\n// const modifierApprenant = ()=>{\n// for (let i = 0; i < tableau.length; i++) {\n//   const element = tableau[i];\n  \n// }\n// var idButtonModifier = tableau.indexOf(nouvelleApprenant);\n// }\n\nconst textereaBiographie = document.getElementById(\"validationCustom03\")\ntextereaBiographie.addEventListener(\"input\", (event) => {\n  const longueurMax = 130\n  const contenuSaisi = textereaBiographie.value\n  const longueurSaisi = contenuSaisi.length\n  const reste = longueurMax - longueurSaisi\n\n  //actualiser le dom pour afficher le nombre\n  const paragraphCompteur = document.getElementById(\"limite-text\")\n  const compteurText = document.getElementById(\"text-progress\")\n  const restantText = document.getElementById(\"text-restant\")\n\n  compteurText.textContent = longueurSaisi\n  restantText.textContent = \" Il vous reste \" + reste\n\n  //changer couleur\n\n  if (reste < 0) {\n    textereaBiographie.setAttribute(\"maxlength\", \"130\")\n    paragraphCompteur.style.color = \"#ce0033\"\n    paragraphCompteur.textContent = \"Vous pouvez plus saisir\"\n    btnAjouter.disabled = false\n\n  } else if (reste <= 50) {\n    paragraphCompteur.style.color = \"yellow\"\n    btnAjouter.disabled = false\n  } else if (reste > 50) {\n    paragraphCompteur.style.color = \"#00000\"\n    btnAjouter.disabled = false\n  }\n})\nconst idform = document.getElementById(\"idformulaire\")\n\nidform.addEventListener(\"submit\", (event) => {\n  event.preventDefault()\n  event.stopPropagation()\n  //recuperer les valeur saisir sur le formulaire\n  const nomSaisi = inputNom.value\n  const prenomSaisi = inputPrenom.value\n  const bioSaisi = inputBiographie.value\n  const niveauSaisi = inputNiveau.value\n\n  if (nomSaisi.trim().length < 5 || prenomSaisi.trim().length < 10) {\n    alert(\"veillez saisir de bonne information\")\n\n    return\n  } else {\n    btnAjouter.click()\n    // METTRE LES INFORMATION SUR FORME D'OBJET\n    let nouvelleApprenant = {\n      Nom: nomSaisi,\n      Prenom: prenomSaisi,\n      Bio: bioSaisi,\n      Niveau: niveauSaisi\n    }\n    //console.log(nouvelleApprenant.NomPrenom);\n    tableau.push(nouvelleApprenant)\n    idform.reset()\n    \n    creationApprenant(nouvelleApprenant)\n    localStorage.setItem('apprenants', JSON.stringify(tableau))\n\n\n    //console.log(tableau);\n  }\n\n})\n\ntableau.forEach(function (apprenant) {\n  creationApprenant(apprenant)\n})\n\n\n//# sourceURL=webpack://schoolApp/./src/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/app.js"]();
/******/ 	
/******/ })()
;